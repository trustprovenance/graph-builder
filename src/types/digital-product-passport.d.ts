/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ProductPassport is a comprehensive data structure that encapsulates various details pertaining to a product, including its identification details, who issued it, batch information, provernance information, circularity information and a set of verifable product confomrity & sistainability claims.
 */
export interface DigitalProductPassport {
  type?: ("DigitalProductPassport" | "VerifiableCredential")[];
  /**
   * A list of JSON-LD context URIs that define the seamntic meaning of prperties within the credential.
   */
  "@context": (
    | "https://www.w3.org/ns/credentials/v2"
    | "https://test.uncefact.org/vocabulary/untp/dpp/"
  )[];
  /**
   * A unique identifier (URI) assigned to the product passport. May be a UUID
   */
  id: string;
  issuer: CredentialIssuer;
  /**
   * The date and time from which the credential is valid.
   */
  validFrom?: string;
  /**
   * The expiry date (if applicable) of this verifiable credential.
   */
  validUntil?: string;
  credentialSubject?: Product;
}
/**
 * The organisation that is the isuer of this VC. Note that the "id" property MUST be a W3C DID.  Other identifiers such as tax registration numbers can be listed in the "otherIdentifiers" property.
 */
export interface CredentialIssuer {
  type?: "CredentialIssuer";
  /**
   * The W3C DID of the issuer - should be a did:web or did:tdw
   */
  id: string;
  /**
   * The name of the issuer person or organisation
   */
  name: string;
  /**
   * An optional list of other registered identifiers for this credential issuer
   */
  otherIdentifiers?: Entity[];
}
/**
 * The ID and Name of an identified entity such qs a product, facility, party, standard, etc
 */
export interface Entity {
  type?: "Entity";
  /**
   * The globally unique ID of the entity. ExamplesProduct - id.gs1.org/01/09520123456788/21/12345  Party - abr.business.gov.au/ABN/View?abn=90664869327. Facility - did:web:facilities.acme.com:123.
   */
  id: string;
  /**
   * The registered name of the entity within the identifier scheme.  Examplesproduct - baked beans, tinned, 500g. party - Pyx Industries Pty Ltd. facility - Greenacres canning factory
   */
  name: string;
  /**
   * The value of the identifier within the scheme. Examplesproduct - 09520123.456788party - 90664869327. facility - 123.
   */
  idValue?: string;
  /**
   * The identifier scheme ID.  Exampleproduct - id.gs1.org/01. party - business.gov.au/abn  facility - did:web:facilities.acme.com.
   */
  idScheme?: string;
  /**
   * The name of the identifier scheme - examples product - GS1 SGTIN. party - ABN. facility - ACME
   */
  idSchemeName?: string;
}
/**
 * The subject of a digital product passport credential is the identified product.
 */
export interface Product {
  type?: ("Product" | "Entity")[];
  /**
   * The globally unique ID of the entity. ExamplesProduct - id.gs1.org/01/09520123456788/21/12345  Party - abr.business.gov.au/ABN/View?abn=90664869327. Facility - did:web:facilities.acme.com:123.
   */
  id: string;
  /**
   * The registered name of the entity within the identifier scheme.  Examplesproduct - baked beans, tinned, 500g. party - Pyx Industries Pty Ltd. facility - Greenacres canning factory
   */
  name: string;
  /**
   * The value of the identifier within the scheme. Examplesproduct - 09520123.456788party - 90664869327. facility - 123.
   */
  idValue?: string;
  /**
   * The identifier scheme ID.  Exampleproduct - id.gs1.org/01. party - business.gov.au/abn  facility - did:web:facilities.acme.com.
   */
  idScheme?: string;
  /**
   * The name of the identifier scheme - examples product - GS1 SGTIN. party - ABN. facility - ACME
   */
  idSchemeName?: string;
  /**
   * A number or code representing a specific serialised item of the product. Unique within product class.
   */
  serialNumber?: string;
  /**
   * Identifier of the specific production batch of the product.  Unique within the product class.
   */
  batchNumber?: string;
  productImage?: Link;
  /**
   * A textual description providing details about the product.
   */
  description?: string;
  /**
   * A code representing the product's class, typically using the UN CPC (United Nations Central Product Classification) https://unstats.un.org/unsd/classifications/Econ/cpc
   */
  productCategory?: Classification[];
  /**
   * A URL pointing to further human readable information about the product.
   */
  furtherInformation?: Link1[];
  producedByParty?: Entity1;
  producedAtFacility?: Entity2;
  dimensions?: Dimension;
  /**
   * The ISO 8601 date on which the product batch was manufactured.
   */
  productionDate?: string;
  /**
   * The country in which this item was produced / manufactured.
   *
   *     This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId
   *
   */
  countryOfProduction?: string;
  characteristics?: Characteristic;
  /**
   * An array of Provenance objects providing details on the origin and mass fraction of components or ingredients of the product batch.
   */
  materialsProvenance?: Material[];
  /**
   * An array of claim objects representing various product conformity claims about the product / batch.  These can be sustainability claims, circularity claims, or any other claim type within the conformity topic list.
   */
  conformityInformation?: Claim[];
  circularityInformation?: Circularity;
  /**
   * An array of TraceabilityEvent objects detailing EPCIS events related to the traceability of the product batch. SHOULD be provided for any product passport issued at batch or item level.
   */
  traceabilityInformation?: TraceabilityEvent[];
}
/**
 * Reference information (location, type, name) of an image of the product.
 */
export interface Link {
  type?: "Link";
  /**
   * The URL of the target resource.
   */
  linkURL?: string;
  /**
   * A display name for the target resource
   */
  linkName?: string;
  /**
   * The type of the target resource - drawn from a controlled vocabulary
   */
  linkType?: string;
  /**
   * The MIME type of the target ressource.
   *
   *     This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://mimetype.io/all-types
   *
   */
  targetType?: string;
}
/**
 * A classification scheme and code / name representing a category value for a product, entity, or facility.
 */
export interface Classification {
  type?: "Classification";
  /**
   * The globally unique URI representing the specific classifier value
   */
  id: string;
  /**
   * classification code within the scheme
   */
  code?: string;
  /**
   * Name of the classification represented by the code
   */
  name: string;
  /**
   * Classification scheme ID
   */
  schemeID?: string;
  /**
   * The name of the classification scheme
   */
  schemeName?: string;
}
/**
 * A structure to provide a URL link plus metadata associated with the link.
 */
export interface Link1 {
  type?: "Link";
  /**
   * The URL of the target resource.
   */
  linkURL?: string;
  /**
   * A display name for the target resource
   */
  linkName?: string;
  /**
   * The type of the target resource - drawn from a controlled vocabulary
   */
  linkType?: string;
  /**
   * The MIME type of the target ressource.
   *
   *     This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://mimetype.io/all-types
   *
   */
  targetType?: string;
}
/**
 * The ID and Name of an identified entity such qs a product, facility, party, standard, etc
 */
export interface Entity1 {
  type?: "Entity";
  /**
   * The globally unique ID of the entity. ExamplesProduct - id.gs1.org/01/09520123456788/21/12345  Party - abr.business.gov.au/ABN/View?abn=90664869327. Facility - did:web:facilities.acme.com:123.
   */
  id: string;
  /**
   * The registered name of the entity within the identifier scheme.  Examplesproduct - baked beans, tinned, 500g. party - Pyx Industries Pty Ltd. facility - Greenacres canning factory
   */
  name: string;
  /**
   * The value of the identifier within the scheme. Examplesproduct - 09520123.456788party - 90664869327. facility - 123.
   */
  idValue?: string;
  /**
   * The identifier scheme ID.  Exampleproduct - id.gs1.org/01. party - business.gov.au/abn  facility - did:web:facilities.acme.com.
   */
  idScheme?: string;
  /**
   * The name of the identifier scheme - examples product - GS1 SGTIN. party - ABN. facility - ACME
   */
  idSchemeName?: string;
}
/**
 * The ID and Name of an identified entity such qs a product, facility, party, standard, etc
 */
export interface Entity2 {
  type?: "Entity";
  /**
   * The globally unique ID of the entity. ExamplesProduct - id.gs1.org/01/09520123456788/21/12345  Party - abr.business.gov.au/ABN/View?abn=90664869327. Facility - did:web:facilities.acme.com:123.
   */
  id: string;
  /**
   * The registered name of the entity within the identifier scheme.  Examplesproduct - baked beans, tinned, 500g. party - Pyx Industries Pty Ltd. facility - Greenacres canning factory
   */
  name: string;
  /**
   * The value of the identifier within the scheme. Examplesproduct - 09520123.456788party - 90664869327. facility - 123.
   */
  idValue?: string;
  /**
   * The identifier scheme ID.  Exampleproduct - id.gs1.org/01. party - business.gov.au/abn  facility - did:web:facilities.acme.com.
   */
  idScheme?: string;
  /**
   * The name of the identifier scheme - examples product - GS1 SGTIN. party - ABN. facility - ACME
   */
  idSchemeName?: string;
}
/**
 * The physical dimensions of the product. Not every dimension is relevant to every products.  For example bulk materials may have wieght and volume but not length, with, or height."weight":{"value":10, "unit":"KGM"}
 */
export interface Dimension {
  weight?: Measure;
  length?: Measure1;
  width?: Measure2;
  height?: Measure3;
  volume?: Measure4;
}
/**
 * the weight of the product. EG {"value":10, "unit":"KGM"}
 */
export interface Measure {
  /**
   * The numeric value of the measure
   */
  value: number;
  /**
   * Unit of measure drawn from the UNECE rec20 measure code list.
   *
   *     This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode
   *
   */
  unit: string;
}
/**
 * The length of the product or packaging eg {"value":840, "unit":"MMT"}
 */
export interface Measure1 {
  /**
   * The numeric value of the measure
   */
  value: number;
  /**
   * Unit of measure drawn from the UNECE rec20 measure code list.
   *
   *     This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode
   *
   */
  unit: string;
}
/**
 * The width of the product or packaging. eg {"value":150, "unit":"MMT"}
 */
export interface Measure2 {
  /**
   * The numeric value of the measure
   */
  value: number;
  /**
   * Unit of measure drawn from the UNECE rec20 measure code list.
   *
   *     This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode
   *
   */
  unit: string;
}
/**
 * The height of the product or packaging. eg {"value":220, "unit":"MMT"}
 */
export interface Measure3 {
  /**
   * The numeric value of the measure
   */
  value: number;
  /**
   * Unit of measure drawn from the UNECE rec20 measure code list.
   *
   *     This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode
   *
   */
  unit: string;
}
/**
 * The displacement volume of the product. eg {"value":7.5, "unit":"LTR"}
 */
export interface Measure4 {
  /**
   * The numeric value of the measure
   */
  value: number;
  /**
   * Unit of measure drawn from the UNECE rec20 measure code list.
   *
   *     This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode
   *
   */
  unit: string;
}
/**
 * Product specific characteristics.  This class is an extension point for industry specific product characteristics or performance information such as clothing size or battery capacity.
 */
export interface Characteristic {}
/**
 * The material class encapsulates details about the origin or source of raw materials in a product, including the country of origin and the mass fraction.
 */
export interface Material {
  /**
   * Name of this material (eg "Egyptian Cotton")
   */
  name: string;
  /**
   * A ISO 3166-1 code representing the country of origin of the component or ingredient.
   *
   *     This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId
   *
   */
  originCountry?: string;
  materialType?: Classification1;
  /**
   * A numeric value representing the mass fraction of the product represented by this material. The sum of all mass fraction values for a given passport should be 100.
   */
  massFraction?: number;
  /**
   * Percentage of this material that is recycled (eg 80% recycled Cotton)
   */
  recycledAmount?: number;
  /**
   * Indicates whether this material is hazardous. If true then the materialSafetyInformation proerty must be present
   */
  hazardous?: boolean;
  materialSafetyInformation?: Link2;
}
/**
 * A classification scheme and code / name representing a category value for a product, entity, or facility.
 */
export interface Classification1 {
  type?: "Classification";
  /**
   * The globally unique URI representing the specific classifier value
   */
  id: string;
  /**
   * classification code within the scheme
   */
  code?: string;
  /**
   * Name of the classification represented by the code
   */
  name: string;
  /**
   * Classification scheme ID
   */
  schemeID?: string;
  /**
   * The name of the classification scheme
   */
  schemeName?: string;
}
/**
 * A structure to provide a URL link plus metadata associated with the link.
 */
export interface Link2 {
  type?: "Link";
  /**
   * The URL of the target resource.
   */
  linkURL?: string;
  /**
   * A display name for the target resource
   */
  linkName?: string;
  /**
   * The type of the target resource - drawn from a controlled vocabulary
   */
  linkType?: string;
  /**
   * The MIME type of the target ressource.
   *
   *     This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://mimetype.io/all-types
   *
   */
  targetType?: string;
}
/**
 * The SustainabilityClaim class represents specific claims regarding the sustainability of a product, providing details about the metrics, thresholds, and evidences supporting the claim.
 */
export interface Claim {
  type?: ("Claim" | "Declaration")[];
  /**
   * A unique identifier for the delcaration. Often this will be an extension of the product.id or attestation.id. But could be a UUID.
   */
  id: string;
  referenceStandard?: Standard;
  referenceRegulation?: Regulation;
  /**
   * The specification against which the assessment is made.
   */
  assessmentCriterion?: Criteria[];
  /**
   * The list of specific values measured as part of this assessment (eg tensile strength)
   */
  declaredValues?: Metric[];
  /**
   * An indicator of whether or not the assessment meets the specification.
   */
  compliance?: boolean;
  /**
   * The conformity topic category for this assessment (eg vocabulary.uncefact.org/sustainability/emissions)
   */
  conformityTopic:
    | "environment.energy"
    | "environment.emissions"
    | "environment.water"
    | "environment.waste"
    | "environment.deforestation"
    | "environment.biodiversity"
    | "circularity.content"
    | "circularity.design"
    | "social.labour"
    | "social.rights"
    | "social.community"
    | "social.safety"
    | "governance.ethics"
    | "governance.compliance"
    | "governance.transparency";
  benchmarkValue?: Metric1;
  /**
   * A refernce to evidence to support the benchmark value.
   */
  benchmarkReference?: string;
  conformityEvidence?: Link3;
}
/**
 * The reference to the standard that defines the specification / criteria
 */
export interface Standard {
  type?: "Standard";
  /**
   * A unique identifier for the standard (eg https://www.iso.org/standard/60857.html).
   */
  id?: string;
  /**
   * The name of the standard
   */
  name?: string;
  issuingParty: Entity3;
  /**
   * The date when the standard was issued.
   */
  issueDate?: string;
}
/**
 * The ID and Name of an identified entity such qs a product, facility, party, standard, etc
 */
export interface Entity3 {
  type?: "Entity";
  /**
   * The globally unique ID of the entity. ExamplesProduct - id.gs1.org/01/09520123456788/21/12345  Party - abr.business.gov.au/ABN/View?abn=90664869327. Facility - did:web:facilities.acme.com:123.
   */
  id: string;
  /**
   * The registered name of the entity within the identifier scheme.  Examplesproduct - baked beans, tinned, 500g. party - Pyx Industries Pty Ltd. facility - Greenacres canning factory
   */
  name: string;
  /**
   * The value of the identifier within the scheme. Examplesproduct - 09520123.456788party - 90664869327. facility - 123.
   */
  idValue?: string;
  /**
   * The identifier scheme ID.  Exampleproduct - id.gs1.org/01. party - business.gov.au/abn  facility - did:web:facilities.acme.com.
   */
  idScheme?: string;
  /**
   * The name of the identifier scheme - examples product - GS1 SGTIN. party - ABN. facility - ACME
   */
  idSchemeName?: string;
}
/**
 * The reference to the regulation that defines the assessment criteria
 */
export interface Regulation {
  type?: "Regulation";
  /**
   * The globally unique identifier of this regulation.
   */
  id?: string;
  /**
   * The name of the regulation or act.
   */
  name?: string;
  /**
   * The legal jurisdiction (country) under which the regulation is issued.
   *
   *     This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId
   *
   */
  jurisdictionCountry?: string;
  administeredBy: Entity4;
  /**
   * the date at which the regulation came into effect.
   */
  effectiveDate?: string;
}
/**
 * The ID and Name of an identified entity such qs a product, facility, party, standard, etc
 */
export interface Entity4 {
  type?: "Entity";
  /**
   * The globally unique ID of the entity. ExamplesProduct - id.gs1.org/01/09520123456788/21/12345  Party - abr.business.gov.au/ABN/View?abn=90664869327. Facility - did:web:facilities.acme.com:123.
   */
  id: string;
  /**
   * The registered name of the entity within the identifier scheme.  Examplesproduct - baked beans, tinned, 500g. party - Pyx Industries Pty Ltd. facility - Greenacres canning factory
   */
  name: string;
  /**
   * The value of the identifier within the scheme. Examplesproduct - 09520123.456788party - 90664869327. facility - 123.
   */
  idValue?: string;
  /**
   * The identifier scheme ID.  Exampleproduct - id.gs1.org/01. party - business.gov.au/abn  facility - did:web:facilities.acme.com.
   */
  idScheme?: string;
  /**
   * The name of the identifier scheme - examples product - GS1 SGTIN. party - ABN. facility - ACME
   */
  idSchemeName?: string;
}
/**
 * A specific rule or criterion within a standard or regulation. eg a carbon intensity calculation rule within an emissions standard.
 */
export interface Criteria {
  type?: "Criteria";
  /**
   * A unique identifier for the criteria within the standard  or regulation. For example CO2 emissions calaculations for liquid fule combusion.
   */
  id: string;
  /**
   * A name that describes this criteria.
   */
  name: string;
  /**
   * A conformity threshold defined by the specification (eg minimum compressive strength)
   */
  thresholdValues?: Metric[];
}
/**
 * A specific measure of performance against the criteria that governs the claim.  Expressed as an array of metric (ie unit of emasure) / value (ie the actual numeric value) pairs.
 */
export interface Metric {
  /**
   * A human readable name for this metric (for example "Tensile strength")
   */
  metricName: string;
  metricValue: Measure5;
  /**
   * A percentage represented as a numeric between 0 and 1 indicating the rage of accuracy of the claimed value (eg 0.05 means that the actual value is within 5% of the claimed value.)
   */
  accuracy?: number;
}
/**
 * A numeric value and unit of measure for this metric. Could be a measured value or a specified threshold. Eg {"value":400, "unit":"MPA"} as tensile strenght of structural steel
 */
export interface Measure5 {
  /**
   * The numeric value of the measure
   */
  value: number;
  /**
   * Unit of measure drawn from the UNECE rec20 measure code list.
   *
   *     This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode
   *
   */
  unit: string;
}
/**
 * A specific measure of performance against the criteria that governs the claim.  Expressed as an array of metric (ie unit of emasure) / value (ie the actual numeric value) pairs.
 */
export interface Metric1 {
  /**
   * A human readable name for this metric (for example "Tensile strength")
   */
  metricName: string;
  metricValue: Measure5;
  /**
   * A percentage represented as a numeric between 0 and 1 indicating the rage of accuracy of the claimed value (eg 0.05 means that the actual value is within 5% of the claimed value.)
   */
  accuracy?: number;
}
/**
 * A structure to provide a URL link plus metadata associated with the link.
 */
export interface Link3 {
  type?: "Link";
  /**
   * The URL of the target resource.
   */
  linkURL?: string;
  /**
   * A display name for the target resource
   */
  linkName?: string;
  /**
   * The type of the target resource - drawn from a controlled vocabulary
   */
  linkType?: string;
  /**
   * The MIME type of the target ressource.
   *
   *     This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://mimetype.io/all-types
   *
   */
  targetType?: string;
}
/**
 * A URI pointing to information regarding the recycling aspects of the product.
 */
export interface Circularity {
  /**
   * A URI pointing to recycling information for the product.
   */
  recyclingInformation?: string;
  /**
   * A URI pointing to repair instructions for this product.
   */
  repairInformation?: string;
  /**
   * The percentage of the this product (my mass) that has been designed to be recyclable.
   */
  recyclableContent?: number;
  /**
   * The percentage (by mass) of recycled content in this product
   */
  recyecledContent?: number;
}
/**
 * The TraceabilityEvent class represents a specific EPCIS event in the traceability chain of a product, including details about the event type and reference.
 */
export interface TraceabilityEvent {
  /**
   * A URI pointing to the detailed information about the EPCIS event. SHOULD be a URL lik to a UNTP Digital Traceability Event (DTE)
   */
  eventReference?: string;
  /**
   * A code representing the type of EPCIS event. ObjectEvent, AggregationEvent, TransactionEvent, TransformationEvent, ObjectEvent.
   */
  eventType?:
    | "aggregation"
    | "transformation"
    | "object"
    | "transaction"
    | "association";
}
